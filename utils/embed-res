#!/usr/bin/python

import sys
import os
from tooling.embedder import embedder_bulk

def is_in_root(path = os.getcwd()):
    return os.path.exists(os.path.join(path, "CMakeLists.txt"))

def get_root():
    if is_in_root():
        return os.getcwd()
    else:
        current = os.getcwd()
        while not is_in_root(current):
            if current == "/":
                print("Could not find root directory")
                sys.exit(1)
            current = os.path.dirname(current)
        return current

def has_impl_and_sources(path = os.getcwd()):
    return os.path.exists(os.path.join(path, "impl")) and os.path.exists(os.path.join(path, "sources"))

root = get_root()
can_embed = has_impl_and_sources()

if not can_embed:
    print("Could not find impl and sources directories")
    sys.exit(1)

# print(f"Files that will be embedded in sources/impl:")

# for dirpath, dirnames, filenames in os.walk(os.path.join(root, "impl")):
#     for filename in filenames:
#         filepath = os.path.relpath(os.path.join(dirpath, filename), root)
#         filepath_inside = os.path.relpath(os.path.join(dirpath, filename), os.path.join(root, "impl"))
#         output_path = os.path.join(root, "sources", "impl", filepath_inside)
#         print(f"    {filepath}", end="")
#         print("\t-> ", end="")
#         print(output_path)
    
# input("Agree? (Enter to continue, Ctrl+C to cancel)")

for dirpath, dirnames, filenames in os.walk(os.path.join(root, "sources/impl")):
    for filename in filenames:
        os.remove(os.path.join(dirpath, filename))

embedder_bulk(os.path.join(root, "impl"), os.path.join(root, "sources/impl"))
